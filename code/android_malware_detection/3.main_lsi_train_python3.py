# coding=utf-8
import os
from static import get_apk_path, get_lsi_config, get_xgboost_config, get_cscg_config, get_graph_config
from lsi.lsi import lsi_train, lsi_test
from xgb_classification.combine_lsi_permission import combine_lsi_permission
from xgb_classification.xgboost_clf import train_xgb_model, test_xgb_model

program_root = os.getcwd()
# 添加apktool的环境变量
os.environ["PATH"] = program_root + '/tools/apktool/' + ":" + os.environ["PATH"]
# 添加jadx的环境变量
os.environ["PATH"] = program_root + '/tools/jadx/build/jadx/bin/' + ":" + os.environ["PATH"]


# 在python3.6下运行
# 仅使用语义模型和permission特征进行模型训练
def lsi_model_train(dataset):
    # 8.获取lsi模型训练所需全部文件的路径
    train_file, test_file, TFIDF_dict_path, dict_corpus, TFIDF_model_path, TFIDF_corpus_path, LSI_model_path, LSI_corpus_path, LSI_corpus_path_test, token_root, apktool_root_path, no_below, no_above = get_lsi_config(dataset)

    # 9.进行LSI模型的训练，内部包含TFIDF模型的训练，并生成训练特征文件
    lsi_train(dataset, train_file, TFIDF_dict_path, dict_corpus, TFIDF_model_path, TFIDF_corpus_path, LSI_model_path, LSI_corpus_path, token_root, no_below=no_below, no_above=no_above)

    # 10.生成测试集的特征向量
    lsi_test(dataset, test_file, TFIDF_dict_path, TFIDF_model_path, LSI_model_path, LSI_corpus_path_test, token_root)

    # 11.获取数据集与模型的相关信息
    LSI_Permission_file, LSI_Permission_file_test, lsi_per_xgboost_model, LSI_corpus_path, LSI_corpus_path_test, permission_dir_path = get_xgboost_config(dataset)

    # 12.生成lsi和permission拼接后训练集的特征
    combine_lsi_permission(dataset, LSI_corpus_path, permission_dir_path, LSI_Permission_file)

    # 13.生成测试集的lsi与permission拼接特征
    combine_lsi_permission(dataset, LSI_corpus_path_test, permission_dir_path, LSI_Permission_file_test)

    # 14.训练XGBoost模型进行分类
    train_xgb_model(LSI_Permission_file, lsi_per_xgboost_model)

    # 15.测试XGBoost模型的效果
    test_xgb_model(LSI_Permission_file_test, lsi_per_xgboost_model)


if __name__ == '__main__':
    dataset = 'AMD_AndroZoo_demo'
    lsi_model_train(dataset)

